<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_enemy_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

dir = -1; //Represents direction for enemy
movespeed = 2; //max speed
grav = 0.2; //amount of gravity
hsp = 0;
vsp = 0;
fearofheights = 0;
enemy_hp = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
hsp = dir * movespeed;
vsp += grav;
chck_pxls_below = 8;
image_speed = 0.3;
image_xscale = dir;

//Enemy collision
//Horizontal Collisions
  if (place_meeting(x + hsp, y, obj_ground_top_mid)) //Check for collision before we move in that space
  {
    //If we are about to collide, slowly move up until the collision happens.
    while(!place_meeting(x + sign(hsp), y, obj_ground_top_mid))
    {
      x += sign(hsp);
    }
    dir *= -1; //change direction if collided
  }
 

  //Vertical Collisions
    if (place_meeting(x, y + vsp, obj_ground_top_mid)) //Check for collision before we move in that space
    {
      //If we are about to collide, slowly move up until the collision happens.
      while(!place_meeting(x, y + sign(vsp), obj_ground_top_mid))
      {
        y += sign(vsp);
      }
      vsp = 0; //stop moving if we have collided

        if (fearofheights) &amp;&amp; !position_meeting(x+(sprite_width/2) * dir, y+(sprite_height/2)+chck_pxls_below, obj_ground_top_mid)
          {
            dir *= -1;
          }
    }
    

  if(place_meeting(x,y,obj_player))
  {
    if (obj_player.y &lt; y - 16) //are we colliding with the player from the top.
    {
      with (obj_player) vsp = -jumpspeed; //bounce off the enemy
      enemy_hp = 0;    
      audio_play_sound(snd_enemy_death, 0, false);
      movespeed = 0; //stop moving
      hsp = 0;
      instance_change(obj_enemy_dup, false);
    }
  }
x += hsp;
y += vsp;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_enemy_death, 0, false);
enemy_hp = 0;
instance_change(obj_enemy_dup, false);
with(obj_enemy_dup)
{
    sprite_index = spr_enemy_death;
    image_speed = 1.2;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
